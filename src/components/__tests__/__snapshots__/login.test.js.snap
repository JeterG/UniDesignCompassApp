// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Check Login_Page render 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "storeState": Object {
        "_persist": Object {
          "rehydrated": true,
          "version": -1,
        },
        "state": Object {
          "isAuthenticated": false,
          "user": Object {},
        },
      },
    }
  }
>
  <Connect(Login) />
</ContextProvider>
`;

exports[`Check Password render 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "storeState": Object {
        "_persist": Object {
          "rehydrated": true,
          "version": -1,
        },
        "state": Object {
          "isAuthenticated": false,
          "user": Object {},
        },
      },
    }
  }
>
  <Connect(Login) />
</ContextProvider>
`;

exports[`Check user signup page  render 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "storeState": Object {
        "_persist": Object {
          "rehydrated": true,
          "version": -1,
        },
        "state": Object {
          "isAuthenticated": false,
          "user": Object {},
        },
      },
    }
  }
>
  <Connect(Login) />
</ContextProvider>
`;

exports[`Check verification page loads render 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "storeState": Object {
        "_persist": Object {
          "rehydrated": true,
          "version": -1,
        },
        "state": Object {
          "isAuthenticated": false,
          "user": Object {},
        },
      },
    }
  }
>
  <Connect(Login) />
</ContextProvider>
`;

exports[`render 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "storeState": Object {
        "_persist": Object {
          "rehydrated": true,
          "version": -1,
        },
        "state": Object {
          "isAuthenticated": false,
          "user": Object {},
        },
      },
    }
  }
>
  <Connect(Login) />
</ContextProvider>
`;

type User @model @auth(rules: [{ allow: owner, queries: null} ]) {
  id: ID!
  first_name: String!
  last_name: String!
  email: String!
  teacher: [TeacherCompasses] @connection(name: "TeacherCompasses")
  member: [MemberCompasses] @connection(name: "MemberCompasses")
  reader: [ReaderCompasses] @connection(name: "ReaderCompasses")
  compass: [Compass] @connection(name: "UserCompasses")
}

type TeacherCompasses @model @auth(rules: [{ allow: owner, queries: null} ]) {
  id: ID!
  first_name: String!
  last_name: String!
  email: String!
  user: User @connection(name: "TeacherCompasses")
  compass: Compass @connection(name: "CompassTeachers")
}

type MemberCompasses @model @auth(rules: [{ allow: owner, queries: null} ]) {
  id: ID!
  first_name: String!
  last_name: String!
  email: String!
  user: User @connection(name: "MemberCompasses")
  compass: Compass @connection(name: "CompassMembers")
}

type ReaderCompasses @model @auth(rules: [{ allow: owner, queries: null} ]) {
  id: ID!
  first_name: String!
  last_name: String!
  email: String!
  user: User @connection(name: "ReaderCompasses")
  compass: Compass @connection(name: "CompassReaders")
}

type Compass @model @auth(rules: [{ allow: owner, queries: null} ]) {
  id: ID!
  name_of_compass: String!
  description_of_compass: String!
  createdAt: AWSDateTime
  compassType: String!
  owner: User @connection(name: "UserCompasses")
  scribe: User @connection
  teachers: [TeacherCompasses] @connection(name: "CompassTeachers")
  members: [MemberCompasses] @connection(name: "CompassMembers")
  readers: [ReaderCompasses] @connection(name: "CompassReaders")
  sessions: [Session] @connection(name: "CompassSessions")
  steps: [Step] @connection(name: "CompassSteps")
}

type Session @model @auth(rules: [{ allow: owner, queries: null} ]) {
  id: ID!
  name_of_session: String!
  description_of_session: String!
  createdAt: AWSDateTime
  compass: Compass @connection(name: "CompassSessions")
  comments: [Comment] @connection(name: "SessionComments")
  interactions: [Interaction] @connection(name: "SessionInteractions")
  attachments: [Attachment] @connection(name: "SessionAttachments")
}

type Interaction @model @auth(rules: [{ allow: owner, queries: null} ]) {
  id: ID!
  duration: Int
  log_content: String!
  comments: [String]
  createdAt: AWSDateTime
  session: Session @connection(name: "SessionInteractions")
  step: Step @connection
  # attachments: [Attachment] @connection(name: "InteractionAttachments")
}

type Step @model @auth(rules: [{ allow: owner, queries: null} ]) {
  id:ID!
  name_of_step: String!
  description_of_step: String!
  color: String
  createdAt: AWSDateTime
  compass: Compass @connection(name: "CompassSteps")
}

type Attachment @model{
  name: String
  type: String
  # interaction: Interaction @connection(name: "InteractionAttachments")
  session: Session @connection(name: "SessionAttachments")
  bucket: String!
  region: String!
  key: String!
}

type Comment @model @auth(rules: [{ allow: owner, queries: null} ]){
  id: ID!
  content: String!
  createdAt: AWSDateTime
  commenter: User @connection
  session: Session @connection(name: "SessionComments")
}